<?xml version="1.0"?>

<PropertyList>
    <name>groundservices</name>
    <x>-10</x>
    <layout>vbox</layout>

    <nasal>
        <open>
            var dlgRoot = cmdarg();
          
            var groundserviceslist = props.globals.getNode("/sim/ai/groundservices/", 1).getChildren("vehicle");
            var select_vehicle_node = nil;

            if (size(groundserviceslist) > 0) {
            var combo = gui.findElementByName(dlgRoot, "vehicle-combo");
            var idx = 0;
            foreach (var t; groundserviceslist) {
            combo.getChild("value", idx, 1).setValue(t.getNode("name", 1).getValue());
            idx += 1;
            }
            }

            var select_vehicle = func() {
            var name = getprop("/sim/gui/dialogs/groundservices/selected-vehicle");
            #groundservices.logger.debug("selected_vehicle: " ~ name);
            foreach (var t; groundserviceslist) {
            if (name == t.getNode("name", 1).getValue()) {
            select_vehicle_node = t;
            }
            }
            }

            var generate_groundservice = func() {
            var sai = -1;
            if (select_vehicle_node != nil){
            sai = select_vehicle_node.getIndex();
            }
            #groundservices.logging.debug("gui:generate_groundservice "~ sai);
            if (sai != -1){
            groundservices.createVehicle(sai);
            }
            }

            var generate_move = func(parkpos) {
            #groundservices.logging.debug("gui:generate_move " ~ parkpos);
            groundservice.requestMove(1,parkpos);
            }

            # fill combo box of arrived aircraft
            var k = keys(groundservices.arrivedaircraft);
            #groundservices.logging.debug("gui:aircrafts: " ~ size(k));

            if (size(k) > 0) {
            var combo = gui.findElementByName(dlgRoot, "aircraft-combo");
            var idx = 0;
            
            foreach (var t; k) {
            combo.getChild("value", idx, 1).setValue(groundservices.arrivedaircraft[t].callsign ~ "-" ~ groundservices.arrivedaircraft[t].nearbyparkpos);
            idx += 1;
            }
            }
            
        </open>
    </nasal>

    <group>
        <layout>hbox</layout>
        <empty>
            <stretch>1</stretch>
        </empty>

        <text>
            <label>Ground Services</label>
        </text>

        <empty>
            <stretch>1</stretch>
        </empty>

        <button>
            <pref-width>16</pref-width>
            <pref-height>16</pref-height>
            <legend></legend>
            <keynum>27</keynum>
            <border>2</border>

            <binding>
                <command>dialog-close</command>
            </binding>
        </button>
    </group>
    <hrule/>
    <group>
        <layout>table</layout>

        <text>
            <row>0</row>
            <col>0</col>
            <halign>left</halign>
            <label>Vehicle:</label>
        </text>

        <combo>
            <name>vehicle-combo</name>
            <row>0</row>
            <col>1</col>
            <colspan>2</colspan>
            <halign>left</halign>
            <property>/sim/gui/dialogs/groundservices/selected-vehicle</property>
            <editable>false</editable>
            <pref-width>200</pref-width>
            <halign>fill</halign>
            <binding>
                <command>dialog-apply</command>
                <object-name>vehicle-combo</object-name>
            </binding>
            <binding>
                <command>nasal</command>
                <script>select_vehicle();</script>
            </binding>
        </combo>

        <button>
            <row>0</row>
            <col>2</col>
            <legend>Launch</legend>
            <equal>true</equal>
            <binding>
                <command>nasal</command>
                <script>generate_groundservice();</script>
            </binding>
        </button>
        <empty>
            <stretch>true</stretch>
        </empty>
    </group>
    <hrule/>

    <group>
        <layout>table</layout>

        <text>
            <row>0</row>
            <col>0</col>
            <halign>left</halign>
            <label>Aircraft:</label>
        </text>

        <combo>
            <name>aircraft-combo</name>
            <row>0</row>
            <col>1</col>
            <colspan>2</colspan>
            <halign>left</halign>
            <editable>false</editable>
            <pref-width>200</pref-width>
            <property>/groundservices/input/selected-aircraft</property>
            <halign>fill</halign>
            <binding>
                <command>dialog-apply</command>
                <object-name>aircraft-combo</object-name>
            </binding>
        </combo>

        <button>
            <row>0</row>
            <col>4</col>
            <legend>Launch Service</legend>
            <binding>
                <command>nasal</command>
                <script>groundservices.requestService(props.globals.getNode("/groundservices/input/selected-aircraft", 1).getValue(), nil);</script>
            </binding>
        </button>
    </group>
    <hrule/>
    
    <group>
        <layout>table</layout>

        <text>
            <row>0</row>
            <col>0</col>
            <halign>right</halign>
            <label>Visualize Groundnet:</label>
        </text>
        <checkbox>
            <name>visualizegroundnet</name>
            <row>0</row>
            <col>1</col>
            <halign>left</halign>
            <property>/groundservices/visualizegroundnet</property>
            <binding>
                <command>dialog-apply</command>
            </binding>
        </checkbox>

        <text>
            <row>1</row>
            <col>0</col>
            <halign>right</halign>
            <label>Vehicle automove:</label>
        </text>
        <checkbox>
            <name>automove</name>
            <row>1</row>
            <col>1</col>
            <halign>left</halign>
            <property>/groundservices/automove</property>
            <binding>
                <command>dialog-apply</command>
            </binding>
        </checkbox>

        <text>
            <row>2</row>
            <col>0</col>
            <halign>right</halign>
            <label>Arrived aircraft autoservice:</label>
        </text>
        <checkbox>
            <name>autoservice</name>
            <row>2</row>
            <col>1</col>
            <halign>left</halign>
            <property>/groundservices/autoservice</property>
            <binding>
                <command>dialog-apply</command>
            </binding>
        </checkbox>

       
    </group>
    <hrule/>

    <group>
        <layout>hbox</layout>
        <text>
            <halign>left</halign>
            <label>Viewpoint:</label>
        </text>

        <button>
            <legend>down</legend>
            <binding>
                <command>nasal</command>
                <script>groundservices.cycleViewpoint(-1);</script>
            </binding>
        </button>
        <button>
            <legend>up</legend>
            <binding>
                <command>nasal</command>
                <script>groundservices.cycleViewpoint(1);</script>
            </binding>
        </button>
    </group>
    <hrule/>

    <group>
        <layout>hbox</layout>
        <default-padding>5</default-padding>
        <empty>
            <stretch>true</stretch>
        </empty>
        <button>
            <legend>Show Status</legend>
            <equal>true</equal>
            <binding>
                <command>nasal</command>
                <script>groundservices.report()</script>
            </binding>
        </button>
        <empty>
            <stretch>true</stretch>
        </empty>
        
        <button>
            <legend>Service Me</legend>
            <binding>
                <command>nasal</command>
                <script>groundservices.requestService();</script>
            </binding>
        </button>

        <empty>
            <stretch>true</stretch>
        </empty>
    </group>
   

</PropertyList>
